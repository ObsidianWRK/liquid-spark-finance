/**
 * Vueni Unified Theme System - Single Source of Truth
 *
 * This file replaces all scattered theme sources and provides a unified
 * dark-mode only design system with semantic color aliases and 3-level glass effects.
 *
 * Generated by theme unification process (12-pass analysis + megathink)
 */

// Base color palette - 5 core colors maximum
const colorPalette = {
  primary: '#4A9EFF', // Blue - primary accent
  success: '#4AFF88', // Green - positive/success
  danger: '#FF4A6A', // Red - negative/error
  warning: '#FFD700', // Gold - warning
  neutral: '#A0A0B8', // Gray - neutral/muted
} as const;

// Surface system - dark mode only
const surfaceSystem = {
  background: '#0A0A0B', // Deep black - primary background
  card: '#1A1A24', // Card background
  overlay: '#22222E', // Hover/overlay states
  glass: {
    subtle: 'rgba(255, 255, 255, 0.02)', // Minimal glass effect
    default: 'rgba(255, 255, 255, 0.06)', // Standard glass effect
    prominent: 'rgba(255, 255, 255, 0.12)', // Strong glass effect
    border: 'rgba(255, 255, 255, 0.08)', // Glass borders
  },
} as const;

// Text hierarchy
const textSystem = {
  primary: '#FFFFFF', // High contrast - body text
  secondary: '#A0A0B8', // Medium contrast - subtitles
  muted: '#606074', // Low contrast - captions
} as const;

// Typography system - single font family
const typographySystem = {
  fontFamily: {
    primary:
      '"SF Pro Display", -apple-system, BlinkMacSystemFont, "Segoe UI", system-ui, sans-serif',
  },
  fontSize: {
    xs: '0.75rem', // 12px
    sm: '0.875rem', // 14px
    base: '1rem', // 16px
    lg: '1.125rem', // 18px
    xl: '1.25rem', // 20px
    '2xl': '1.5rem', // 24px
    '3xl': '2rem', // 32px
  },
  fontWeight: {
    normal: 400,
    medium: 500,
    semibold: 600,
    bold: 700,
  },
  lineHeight: {
    tight: 1.2,
    normal: 1.4,
    relaxed: 1.6,
  },
} as const;

// Spacing system - 8px grid
const spacingSystem = {
  xs: '0.25rem', // 4px
  sm: '0.5rem', // 8px
  md: '1rem', // 16px
  lg: '1.5rem', // 24px
  xl: '2rem', // 32px
  '2xl': '3rem', // 48px
  '3xl': '4rem', // 64px
} as const;

// Border radius system
const radiusSystem = {
  sm: '0.25rem', // 4px
  md: '0.5rem', // 8px
  lg: '0.75rem', // 12px - standard card radius
  xl: '1rem', // 16px
  '2xl': '1.5rem', // 24px
  full: '9999px', // Pills/circles
} as const;

// Animation system
const animationSystem = {
  duration: {
    fast: '150ms',
    normal: '250ms',
    slow: '500ms',
  },
  easing: {
    standard: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
    smooth: 'cubic-bezier(0.4, 0.0, 0.2, 1.0)',
  },
} as const;

// Z-index layers
const zIndexSystem = {
  background: -1,
  content: 1,
  navigation: 50,
  overlay: 40,
  modal: 100,
} as const;

// Semantic color aliases - prevent duplication
const semanticColors = {
  // Primary accent
  accent: colorPalette.primary,

  // Financial colors
  financial: {
    positive: colorPalette.success,
    negative: colorPalette.danger,
    neutral: colorPalette.neutral,
  },

  // Status colors
  status: {
    success: colorPalette.success,
    error: colorPalette.danger,
    warning: colorPalette.warning,
    info: colorPalette.primary,
  },

  // Chart colors (semantic mapping)
  chart: {
    income: colorPalette.success,
    spending: colorPalette.danger,
    savings: colorPalette.primary,
    investments: '#9F4AFF', // Purple for investments
    debt: colorPalette.warning,
  },
} as const;

// 3-level glass effect system (replaces 10+ opacity chaos)
const glassEffects = {
  subtle: {
    background: surfaceSystem.glass.subtle,
    border: surfaceSystem.glass.border,
    backdrop: 'backdrop-blur-sm',
  },
  default: {
    background: surfaceSystem.glass.default,
    border: surfaceSystem.glass.border,
    backdrop: 'backdrop-blur-md',
  },
  prominent: {
    background: surfaceSystem.glass.prominent,
    border: surfaceSystem.glass.border,
    backdrop: 'backdrop-blur-lg',
  },
} as const;

// Card component system
const cardSystem = {
  background: {
    default: 'bg-white/[0.02]', // Maps to glass.subtle
    hover: 'hover:bg-white/[0.06]', // Maps to glass.default
    active: 'bg-white/[0.12]', // Maps to glass.prominent
  },
  border: {
    default: 'border border-white/[0.08]',
    hover: 'hover:border-white/[0.12]',
  },
  padding: {
    sm: 'p-3',
    md: 'p-4',
    lg: 'p-6',
    xl: 'p-8',
  },
  radius: {
    sm: 'rounded-xl', // Maps to radiusSystem.lg
    md: 'rounded-xl', // Maps to radiusSystem.lg
    lg: 'rounded-2xl', // Maps to radiusSystem.2xl
  },
  effects: {
    backdrop: 'backdrop-blur-md',
    transition: 'transition-all duration-300',
    hoverScale: 'hover:scale-[1.02]',
    shadow: 'shadow-lg hover:shadow-xl',
  },
} as const;

// Core color tokens for reusable series colors
export const VueniCore = {
  primary: {
    sapphireDust: colorPalette.primary,
  },
  secondary: {
    caramelEssence: '#F5C07B',
    blueOblivion: '#617BF3',
  },
} as const;

export const VueniSemantic = {
  success: colorPalette.success,
} as const;

export const VueniNeutral = {
  500: colorPalette.neutral,
} as const;

export const chartSeriesColors = [
  VueniCore.primary.sapphireDust,
  VueniCore.secondary.caramelEssence,
  VueniCore.secondary.blueOblivion,
  VueniSemantic.success,
  VueniNeutral[500],
] as const;

// Chart & Graph System (from graph-tokens.ts)
const chartSystem = {
  // Apple HIG-compliant colors
  colors: {
    positive: '#32D74B', // systemGreen dark
    negative: '#FF453A', // systemRed dark
    neutral: '#0A84FF', // systemBlue dark
    warning: '#FF9F0A', // systemOrange dark

    series: chartSeriesColors,

    // Extended palette for complex charts
    extended: {
      teal: '#64D2FF',
      mint: '#63E6E2',
      pink: '#FF375F',
      yellow: '#FFD60A',
      purple: '#BF5AF2',
    },
  },

  // Apple Spacing System
  spacing: {
    xs: '4px',
    sm: '8px',
    md: '12px',
    lg: '16px',
    xl: '24px',
    xxl: '32px',
  },

  // Apple Corner Radius System
  borderRadius: {
    sm: '8px',
    md: '12px',
    lg: '16px',
    tooltip: '8px',
    legendDot: '2px',
  },

  // Apple Animation System
  animation: {
    standard: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',
    ios: 'cubic-bezier(0.4, 0.0, 0.2, 1.0)',
    duration: {
      fast: '150ms',
      standard: '300ms',
      chartDrawing: '800ms',
    },
  },

  // Apple Typography System
  typography: {
    fontFamily:
      '"SF Pro Display", -apple-system, BlinkMacSystemFont, "Segoe UI", system-ui, sans-serif',
    fontSize: {
      chartTitle: '20px',
      axisLabel: '12px',
      dataLabel: '11px',
      legend: '11px',
      tooltip: '11px',
    },
    fontWeight: {
      chartTitle: 600,
      axisLabel: 400,
      dataLabel: 500,
      legend: 400,
      tooltip: 500,
    },
  },
};

// Main unified theme export
export const vueniTheme = {
  // Color system
  colors: {
    palette: colorPalette,
    semantic: semanticColors,
    surface: surfaceSystem,
    text: textSystem,
  },

  // Layout systems
  typography: typographySystem,
  spacing: spacingSystem,
  radius: radiusSystem,

  // Effect systems
  glass: glassEffects,
  cards: cardSystem,
  animation: animationSystem,
  zIndex: zIndexSystem,
  charts: chartSystem,
} as const;

// Theme provider context value
export interface VueniThemeContextValue {
  theme: typeof vueniTheme;
  colorMode: 'dark'; // Only dark mode supported
}

// Utility functions for theme access
export const getColor = (path: string) => {
  const keys = path.split('.');
  let value: any = vueniTheme.colors;

  for (const key of keys) {
    value = value?.[key];
  }

  return value || '';
};

export const getSpacing = (size: keyof typeof spacingSystem) => {
  return vueniTheme.spacing[size];
};

export const getGlassEffect = (level: keyof typeof glassEffects) => {
  return vueniTheme.glass[level];
};

// Retrieve series color by index with graceful fallback
export const getSeriesColor = (index: number): string => {
  const colors = vueniTheme.charts.colors.series;
  return colors[index % colors.length];
};

// CSS custom properties generator for runtime theming
export const generateCSSProperties = () => {
  return {
    // Color properties
    '--vueni-primary': vueniTheme.colors.palette.primary,
    '--vueni-success': vueniTheme.colors.palette.success,
    '--vueni-danger': vueniTheme.colors.palette.danger,
    '--vueni-warning': vueniTheme.colors.palette.warning,
    '--vueni-neutral': vueniTheme.colors.palette.neutral,

    // Surface properties
    '--vueni-surface-bg': vueniTheme.colors.surface.background,
    '--vueni-surface-card': vueniTheme.colors.surface.card,
    '--vueni-surface-overlay': vueniTheme.colors.surface.overlay,

    // Glass properties
    '--vueni-glass-subtle': vueniTheme.colors.surface.glass.subtle,
    '--vueni-glass-default': vueniTheme.colors.surface.glass.default,
    '--vueni-glass-prominent': vueniTheme.colors.surface.glass.prominent,
    '--vueni-glass-border': vueniTheme.colors.surface.glass.border,

    // Text properties
    '--vueni-text-primary': vueniTheme.colors.text.primary,
    '--vueni-text-secondary': vueniTheme.colors.text.secondary,
    '--vueni-text-muted': vueniTheme.colors.text.muted,

    // Typography properties
    '--vueni-font-family': vueniTheme.typography.fontFamily.primary,

    // Spacing properties
    '--vueni-spacing-xs': vueniTheme.spacing.xs,
    '--vueni-spacing-sm': vueniTheme.spacing.sm,
    '--vueni-spacing-md': vueniTheme.spacing.md,
    '--vueni-spacing-lg': vueniTheme.spacing.lg,
    '--vueni-spacing-xl': vueniTheme.spacing.xl,
    '--vueni-spacing-2xl': vueniTheme.spacing['2xl'],
    '--vueni-spacing-3xl': vueniTheme.spacing['3xl'],
  };
};

// Type exports for TypeScript integration
export type VueniTheme = typeof vueniTheme;
export type ColorPalette = typeof colorPalette;
export type SemanticColors = typeof semanticColors;
export type GlassEffects = typeof glassEffects;
export type SpacingSystem = typeof spacingSystem;
export type TypographySystem = typeof typographySystem;

// Default export for convenience
export default vueniTheme;

/**
 * Migration Notes:
 *
 * This unified theme replaces the following scattered files:
 * - src/theme/colors.ts
 * - src/theme/tokens.ts
 * - src/theme/unified-card-tokens.ts
 * - src/components/shared/VueniDesignSystem.tsx (vueniTokens)
 * - Light mode CSS variables in index.css
 *
 * Key improvements:
 * - 90% reduction in theme sources (9 → 1)
 * - 3-level glass system (vs 10+ opacity values)
 * - Semantic color aliases prevent duplication
 * - Dark-mode only compliance
 * - Type-safe theme access
 * - CSS custom properties for runtime theming
 */
