<testsuites id="" name="" tests="22" failures="0" skipped="22" errors="0" time="0.04903700000000003">
<testsuite name="comprehensive-hook-validation.spec.ts" timestamp="2025-06-18T01:01:53.618Z" hostname="hook-validation-chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Comprehensive Hook Validation Suite › should complete full navigation cycle without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should handle rapid navigation stress test without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should handle mobile navigation without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should handle complex navigation patterns without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should handle viewport changes during navigation without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should handle lazy loading scenarios without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should handle performance stress scenarios without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should handle error recovery scenarios without hook violations" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should validate performance metrics are within acceptable ranges" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Comprehensive Hook Validation Suite › should generate comprehensive test report" classname="comprehensive-hook-validation.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="hook-violations.spec.ts" timestamp="2025-06-18T01:01:53.618Z" hostname="hook-validation-chrome" tests="12" failures="0" skipped="12" time="0" errors="0">
<testcase name="React Hook Violations and Error Detection › should load initial page without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should navigate between all tabs without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle rapid tab navigation without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle URL parameter changes without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle page refresh on each tab without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle mobile viewport changes without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle component mount/unmount cycles without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle wrapped tab lazy loading without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle error boundary scenarios without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should handle performance mode toggle without hook violations" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="React Hook Violations and Error Detection › should validate React DevTools compatibility" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Specific Hook Violation Reproduction › should reproduce reported hook violation scenario" classname="hook-violations.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>